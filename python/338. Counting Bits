338. Counting Bits

Given an integer n, return an array ans of length n + 1 such that for each i (0 <= i <= n), ans[i] is the number of 1's in the binary representation of i.

Example 1:

Input: n = 2
Output: [0,1,1]
Explanation:
0 --> 0
1 --> 1
2 --> 10
Example 2:

Input: n = 5
Output: [0,1,1,2,1,2]
Explanation:
0 --> 0
1 --> 1
2 --> 10
3 --> 11
4 --> 100
5 --> 101

# 分成最後尾數是1 or 0 => i & 1
# 101 => 10 + 1
# 10 => 1 + 0
# 用DP Bottom up 去紀錄每個過去的值
# n = Input
# time: O(n)
# space: O(n)


class Solution:
    def countBits(self, n: int) -> List[int]:
        ans = [i for i in range(n+1)]
        for i in range(n+1):
            ans[i] = ans[i >> 1] + (i&1)
        return ans
        
