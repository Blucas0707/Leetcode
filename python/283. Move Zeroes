https://leetcode.com/problems/move-zeroes/

Given an integer array nums, move all 0's to the end of it while maintaining the relative order of the non-zero elements.

Note that you must do this in-place without making a copy of the array.

 

Example 1:

Input: nums = [0,1,0,3,12]
Output: [1,3,12,0,0]
Example 2:

Input: nums = [0]
Output: [0]
 

Constraints:

1 <= nums.length <= 104
-231 <= nums[i] <= 231 - 1

```
Idea:
1. use 2 pointers: 一個是curindex去跑loop, 一個同時紀錄最後0的位置，然後交換 
```

class Solution:
    def moveZeroes(self, nums: List[int]) -> None:
        """
        Do not return anything, modify nums in-place instead.
        """
        cur, zero = 0, 0
        while cur < len(nums):
            
            # Swap
            if nums[cur] != 0 and nums[zero] == 0:
                nums[cur], nums[zero] = nums[zero], nums[cur]
                zero += 1
            
            # find 0 position
            if nums[zero] != 0:
                zero += 1
            cur += 1
                
