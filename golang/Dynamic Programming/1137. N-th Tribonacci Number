LeetCode: https://leetcode.com/problems/n-th-tribonacci-number/

The Tribonacci sequence Tn is defined as follows: 

T0 = 0, T1 = 1, T2 = 1, and Tn+3 = Tn + Tn+1 + Tn+2 for n >= 0.

Given n, return the value of Tn.

Example 1:

Input: n = 4
Output: 4
Explanation:
T_3 = 0 + 1 + 1 = 2
T_4 = 1 + 1 + 2 = 4

Constraints:

0 <= n <= 37
The answer is guaranteed to fit within a 32-bit integer, ie. answer <= 2^31 - 1.

####################

func tribonacci(n int) int {
    return Memotribonacci(n, make(map[int]int))
}
// Memo
// time complexity: O(N)
// space complexity: O(N)
func Memotribonacci(n int, memo map[int]int) int {
    if val, ok := memo[n]; ok {
        return val
    }
    if n == 0 {
        memo[n] = 0
        return memo[n]
    }
    if n <= 2 {
        memo[n] = 1
        return memo[n]
    }
    memo[n] = Memotribonacci(n-1, memo) + Memotribonacci(n-2, memo) + Memotribonacci(n-3, memo)
    return memo[n]
}
